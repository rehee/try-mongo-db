@model UserCreateView
@Html.Hidden("Id", Model.Id)

@if (G.UserNameIsNotEmail)
{
    <div class="form-group">
        <label>UserName</label>
        <input type="text" @(ViewBag.inEdit != null ? "readonly disabled" : "required") class="form-control" name="UserName" value="@Model.UserName" />
    </div>
}
<div class="form-group">
    <label>UserEmail</label>
    <input type="email" @(ViewBag.inEdit != null ? "readonly disabled" : "required") class="form-control" name="Email" value="@Model.Email" />
</div>
@if (ViewBag.inEdit == null)
{
    <div class="form-group">
        <label>Password</label>
        <input type="password" @(ViewBag.inEdit != null ? "" : "required") autocomplete="off" class="form-control" name="Password" value="" />
    </div>
    <div class="form-group">
        <label>Confirm Password</label>
        <input type="password" @(ViewBag.inEdit != null ? "" : "required") autocomplete="off" class="form-control" name="ConfirmPassword" value="" />
    </div>
}
<div class="form-group">
    <label>Roles</label>
    <select name="SelectedRoles" class="form-control" size="5" multiple="">
        <option value="">--</option>
        @foreach (var item in Model.Roles)
        {
            <option value="@item.Id" @(Model.SelectedRoles.Contains(item.Id) ? "selected" : "")>@item.RoleDisplayName</option>
        }
    </select>
</div>

@{ Html.RenderPartial("AdminInputs/_PropertiesEdit", Model);}
<button type="submit" class="btn btn-success waves-effect waves-light m-r-10">Submit</button>